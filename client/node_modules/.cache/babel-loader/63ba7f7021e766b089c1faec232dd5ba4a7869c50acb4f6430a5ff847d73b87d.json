{"ast":null,"code":"var _jsxFileName = \"/Users/rishikeshmungase/Desktop/Pubmatic/React/data_trail/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport Graph from \"./Graph\";\nimport Selector from \"./Input\";\nimport DynamicSVGPlaceholderWithEdges from \"./SVGPlaceholder\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [filters, setFilters] = useState({\n    productName: \"\",\n    startDate: \"\",\n    startHour: \"\",\n    endDate: \"\",\n    endHour: \"\"\n  });\n  const [selectedProduct, setSelectedProduct] = useState(null);\n  const [selectedStartDateHour, setSelectedStartDateHour] = useState(null);\n  const [selectedEndDateHour, setSelectedEndDateHour] = useState(null);\n  const handleLoadGraph = () => {\n    // Check if all 5 inputs are selected\n    const {\n      productName,\n      startDate,\n      startHour,\n      endDate,\n      endHour\n    } = filters;\n    if (!productName || !startDate || !startHour || !endDate || !endHour) {\n      toast.warning(\"Please provide all inputs\", {\n        position: \"top-right\",\n        autoClose: 4000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        theme: \"light\"\n      });\n      return;\n    }\n    setSelectedProduct(productName);\n    setSelectedStartDateHour(startDate + \"-\" + startHour);\n    setSelectedEndDateHour(endDate + \"-\" + endHour);\n    setEnd;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100vw\",\n      height: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Selector, {\n      filters: filters,\n      setFilters: setFilters,\n      onLoadGraph: handleLoadGraph\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), selectedProduct ? /*#__PURE__*/_jsxDEV(Graph, {\n      productName: selectedProduct,\n      startDate: selectedStartDateHour,\n      endDate: selectedEndDateHour\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(DynamicSVGPlaceholderWithEdges, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"QCScwn4hSjHkaSYvZ/GTw2pY+1w=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Header","Graph","Selector","DynamicSVGPlaceholderWithEdges","ToastContainer","toast","jsxDEV","_jsxDEV","App","_s","filters","setFilters","productName","startDate","startHour","endDate","endHour","selectedProduct","setSelectedProduct","selectedStartDateHour","setSelectedStartDateHour","selectedEndDateHour","setSelectedEndDateHour","handleLoadGraph","warning","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","theme","setEnd","style","width","height","children","fileName","_jsxFileName","lineNumber","columnNumber","onLoadGraph","_c","$RefreshReg$"],"sources":["/Users/rishikeshmungase/Desktop/Pubmatic/React/data_trail/client/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport Graph from \"./Graph\";\nimport Selector from \"./Input\";\nimport DynamicSVGPlaceholderWithEdges from \"./SVGPlaceholder\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nexport default function App() {\n  const [filters, setFilters] = useState({\n    productName: \"\",\n    startDate: \"\",\n    startHour: \"\",\n    endDate: \"\",\n    endHour: \"\",\n  });\n\n  const [selectedProduct, setSelectedProduct] = useState(null);\n  const [selectedStartDateHour, setSelectedStartDateHour] = useState(null);\n  const [selectedEndDateHour, setSelectedEndDateHour] = useState(null);\n\n  const handleLoadGraph = () => {\n    // Check if all 5 inputs are selected\n    const { productName, startDate, startHour, endDate, endHour } = filters;\n\n    if (!productName || !startDate || !startHour || !endDate || !endHour) {\n      toast.warning(\"Please provide all inputs\", {\n        position: \"top-right\",\n        autoClose: 4000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        theme: \"light\",\n      });\n      return;\n    }\n\n    setSelectedProduct(productName);\n    setSelectedStartDateHour(startDate + \"-\" + startHour);\n    setSelectedEndDateHour(endDate + \"-\" + endHour);\n    setEnd\n  };\n\n  return (\n    <div style={{ width: \"100vw\", height: \"100vh\" }}>\n      <Header/>\n      <Selector\n        filters={filters}\n        setFilters={setFilters}\n        onLoadGraph={handleLoadGraph}\n      />\n\n      {selectedProduct ? (\n        <Graph productName={selectedProduct} startDate={selectedStartDateHour} endDate={selectedEndDateHour} />\n      ) : (\n        <DynamicSVGPlaceholderWithEdges />\n      )}\n\n      <ToastContainer />\n    </div>\n  );\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}