{"ast":null,"code":"var _jsxFileName = \"/Users/rishikeshmungase/Desktop/Pubmatic/React/data_trail/client/src/Graph.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\"; // add useState, useEffect\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Graph({\n  productName = \"Audience\"\n}) {\n  _s();\n  const [dependencies, setDependencies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    setLoading(true);\n    fetch(`http://localhost:5000/datatrail/product/${productName}`).then(res => res.json()).then(data => {\n      setDependencies(data.dependencies || []);\n      setLoading(false);\n    }).catch(err => {\n      console.error(err);\n      setLoading(false);\n    });\n  }, [productName]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 20,\n        fontSize: 20,\n        fontWeight: 600\n      },\n      children: \"Rendering Graph...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  }\n\n  // After this, the rest of your code remains unchanged:\n  // rawNodes, rawEdges, getLayoutedElements, ReactFlow, etc.\n  // just replace the previous hardcoded `dependencies` with this state.\n}\n_s(Graph, \"c6zQflH6LMfwcks6tL5h7tkpfwQ=\");\n_c = Graph;\nvar _c;\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Graph","productName","_s","dependencies","setDependencies","loading","setLoading","fetch","then","res","json","data","catch","err","console","error","style","padding","fontSize","fontWeight","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/rishikeshmungase/Desktop/Pubmatic/React/data_trail/client/src/Graph.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\"; // add useState, useEffect\n\nexport default function Graph({ productName = \"Audience\" }) {\n  const [dependencies, setDependencies] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    setLoading(true);\n    fetch(`http://localhost:5000/datatrail/product/${productName}`)\n      .then((res) => res.json())\n      .then((data) => {\n        setDependencies(data.dependencies || []);\n        setLoading(false);\n      })\n      .catch((err) => {\n        console.error(err);\n        setLoading(false);\n      });\n  }, [productName]);\n\n  if (loading) {\n    return (\n      <div style={{ padding: 20, fontSize: 20, fontWeight: 600 }}>\n        Rendering Graph...\n      </div>\n    );\n  }\n\n  // After this, the rest of your code remains unchanged:\n  // rawNodes, rawEdges, getLayoutedElements, ReactFlow, etc.\n  // just replace the previous hardcoded `dependencies` with this state.\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpD,eAAe,SAASC,KAAKA,CAAC;EAAEC,WAAW,GAAG;AAAW,CAAC,EAAE;EAAAC,EAAA;EAC1D,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACdS,UAAU,CAAC,IAAI,CAAC;IAChBC,KAAK,CAAC,2CAA2CN,WAAW,EAAE,CAAC,CAC5DO,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACdP,eAAe,CAACO,IAAI,CAACR,YAAY,IAAI,EAAE,CAAC;MACxCG,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACDM,KAAK,CAAEC,GAAG,IAAK;MACdC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MAClBP,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,CAACL,WAAW,CAAC,CAAC;EAEjB,IAAII,OAAO,EAAE;IACX,oBACEN,OAAA;MAAKiB,KAAK,EAAE;QAAEC,OAAO,EAAE,EAAE;QAAEC,QAAQ,EAAE,EAAE;QAAEC,UAAU,EAAE;MAAI,CAAE;MAAAC,QAAA,EAAC;IAE5D;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAEV;;EAEA;EACA;EACA;AACF;AAACtB,EAAA,CA7BuBF,KAAK;AAAAyB,EAAA,GAALzB,KAAK;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}