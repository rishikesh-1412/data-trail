{"ast":null,"code":"// import React from \"react\";\n\n// export default function Selector({ filters, setFilters, onLoadGraph }) {\n//   const today = new Date();\n//   const minStartDate = new Date();\n//   minStartDate.setDate(today.getDate() - 30);\n\n//   const formatDate = (d) => d.toISOString().split(\"T\")[0]; // yyyy-mm-dd\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n\n//     setFilters((prev) => {\n//       let updated = { ...prev, [name]: value };\n\n//       // Validation 1: StartDate cannot be less than today - 30\n//       if (name === \"startDate\" && value < formatDate(minStartDate)) {\n//         updated.startDate = formatDate(minStartDate);\n//       }\n\n//       // Validation 2: EndDate must be >= StartDate\n//       if (name === \"endDate\" && value < updated.startDate) {\n//         updated.endDate = updated.startDate;\n//       }\n\n//       return updated;\n//     });\n//   };\n\n//   const boxStyle = {\n//     display: \"flex\",\n//     flexDirection: \"column\",\n//     fontSize: \"14px\",\n//     fontWeight: 500,\n//     color: \"#333\",\n//   };\n\n//   const inputStyle = {\n//     padding: \"6px 8px\",\n//     borderRadius: \"6px\",\n//     border: \"1px solid #ccc\",\n//     marginTop: \"4px\",\n//     minWidth: \"140px\",\n//     fontSize: \"14px\",\n//   };\n\n//   return (\n//     <div\n//       style={{\n//         padding: \"12px 20px\",\n//         display: \"flex\",\n//         gap: \"20px\",\n//         alignItems: \"center\",\n//         background: \"linear-gradient(90deg, #f8f9fa, #eef2f7)\",\n//         borderBottom: \"1px solid #ddd\",\n//         boxShadow: \"0 2px 4px rgba(0,0,0,0.05)\",\n//       }}\n//     >\n//       {/* Product Name First */}\n//       <div style={boxStyle}>\n//         <label>Product</label>\n//         <select\n//           name=\"productName\"\n//           value={filters.productName}\n//           onChange={handleChange}\n//           style={inputStyle}\n//         >\n//           <option value=\"\">Select</option>\n//           <option value=\"Audience\">Audience</option>\n//           <option value=\"Activate\">Activate</option>\n//         </select>\n//       </div>\n\n//       <div style={boxStyle}>\n//         <label>Start Date</label>\n//         <input\n//           type=\"date\"\n//           name=\"startDate\"\n//           value={filters.startDate}\n//           min={formatDate(minStartDate)}\n//           max={formatDate(today)}\n//           onChange={handleChange}\n//           style={inputStyle}\n//         />\n//       </div>\n\n//       <div style={boxStyle}>\n//         <label>Start Hour</label>\n//         <select\n//           name=\"startHour\"\n//           value={filters.startHour}\n//           onChange={handleChange}\n//           style={inputStyle}\n//         >\n//           <option value=\"\">Select Hour</option>\n//           {Array.from({ length: 24 }, (_, i) => (\n//             <option key={i} value={i}>\n//               {i.toString().padStart(2, \"0\")}\n//             </option>\n//           ))}\n//         </select>\n//       </div>\n\n//       <div style={boxStyle}>\n//         <label>End Date</label>\n//         <input\n//           type=\"date\"\n//           name=\"endDate\"\n//           value={filters.endDate}\n//           min={filters.startDate || formatDate(minStartDate)}\n//           max={formatDate(today)}\n//           onChange={handleChange}\n//           style={inputStyle}\n//         />\n//       </div>\n\n//       <div style={boxStyle}>\n//         <label>End Hour</label>\n//         <select\n//           name=\"endHour\"\n//           value={filters.endHour}\n//           onChange={handleChange}\n//           style={inputStyle}\n//         >\n//           <option value=\"\">Select Hour</option>\n//           {Array.from({ length: 24 }, (_, i) => (\n//             <option key={i} value={i}>\n//               {i.toString().padStart(2, \"0\")}\n//             </option>\n//           ))}\n//         </select>\n//       </div>\n\n//       {/* Load Graph button */}\n//       <div style={{ display: \"flex\", flexDirection: \"column\", marginTop: \"20px\" }}>\n//         <button\n//           onClick={(onLoadGraph)}\n//           style={{\n//             padding: \"8px 16px\",\n//             background: \"#007bff\",\n//             color: \"white\",\n//             border: \"none\",\n//             borderRadius: \"6px\",\n//             cursor: \"pointer\",\n//             fontSize: \"14px\",\n//             height: \"fit-content\",\n//             transition: \"all 0.3s ease-in-out\",\n//           }}\n//           onMouseEnter={(e) => {\n//             e.target.style.background = \"#0056b3\";\n//             e.target.style.transform = \"scale(1.08)\";\n//             e.target.style.boxShadow = \"0 4px 12px rgba(0, 123, 255, 0.5)\";\n//             // e.target.innerText = \"ðŸš€ Ready to Load?\";\n//           }}\n//           onMouseLeave={(e) => {\n//             e.target.style.background = \"#007bff\";\n//             e.target.style.transform = \"scale(1)\";\n//             e.target.style.boxShadow = \"none\";\n//             e.target.innerText = \"Load Graph\";\n//           }}\n//         >\n//           Load Graph\n//         </button>\n//       </div>\n//     </div>\n//   );\n// }","map":{"version":3,"names":[],"sources":["/Users/rishikeshmungase/Desktop/Pubmatic/React/data_trail/client/src/Input.js"],"sourcesContent":["// import React from \"react\";\n\n// export default function Selector({ filters, setFilters, onLoadGraph }) {\n//   const today = new Date();\n//   const minStartDate = new Date();\n//   minStartDate.setDate(today.getDate() - 30);\n\n//   const formatDate = (d) => d.toISOString().split(\"T\")[0]; // yyyy-mm-dd\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n\n//     setFilters((prev) => {\n//       let updated = { ...prev, [name]: value };\n\n//       // Validation 1: StartDate cannot be less than today - 30\n//       if (name === \"startDate\" && value < formatDate(minStartDate)) {\n//         updated.startDate = formatDate(minStartDate);\n//       }\n\n//       // Validation 2: EndDate must be >= StartDate\n//       if (name === \"endDate\" && value < updated.startDate) {\n//         updated.endDate = updated.startDate;\n//       }\n\n//       return updated;\n//     });\n//   };\n\n//   const boxStyle = {\n//     display: \"flex\",\n//     flexDirection: \"column\",\n//     fontSize: \"14px\",\n//     fontWeight: 500,\n//     color: \"#333\",\n//   };\n\n//   const inputStyle = {\n//     padding: \"6px 8px\",\n//     borderRadius: \"6px\",\n//     border: \"1px solid #ccc\",\n//     marginTop: \"4px\",\n//     minWidth: \"140px\",\n//     fontSize: \"14px\",\n//   };\n\n//   return (\n//     <div\n//       style={{\n//         padding: \"12px 20px\",\n//         display: \"flex\",\n//         gap: \"20px\",\n//         alignItems: \"center\",\n//         background: \"linear-gradient(90deg, #f8f9fa, #eef2f7)\",\n//         borderBottom: \"1px solid #ddd\",\n//         boxShadow: \"0 2px 4px rgba(0,0,0,0.05)\",\n//       }}\n//     >\n//       {/* Product Name First */}\n//       <div style={boxStyle}>\n//         <label>Product</label>\n//         <select\n//           name=\"productName\"\n//           value={filters.productName}\n//           onChange={handleChange}\n//           style={inputStyle}\n//         >\n//           <option value=\"\">Select</option>\n//           <option value=\"Audience\">Audience</option>\n//           <option value=\"Activate\">Activate</option>\n//         </select>\n//       </div>\n\n//       <div style={boxStyle}>\n//         <label>Start Date</label>\n//         <input\n//           type=\"date\"\n//           name=\"startDate\"\n//           value={filters.startDate}\n//           min={formatDate(minStartDate)}\n//           max={formatDate(today)}\n//           onChange={handleChange}\n//           style={inputStyle}\n//         />\n//       </div>\n\n//       <div style={boxStyle}>\n//         <label>Start Hour</label>\n//         <select\n//           name=\"startHour\"\n//           value={filters.startHour}\n//           onChange={handleChange}\n//           style={inputStyle}\n//         >\n//           <option value=\"\">Select Hour</option>\n//           {Array.from({ length: 24 }, (_, i) => (\n//             <option key={i} value={i}>\n//               {i.toString().padStart(2, \"0\")}\n//             </option>\n//           ))}\n//         </select>\n//       </div>\n\n//       <div style={boxStyle}>\n//         <label>End Date</label>\n//         <input\n//           type=\"date\"\n//           name=\"endDate\"\n//           value={filters.endDate}\n//           min={filters.startDate || formatDate(minStartDate)}\n//           max={formatDate(today)}\n//           onChange={handleChange}\n//           style={inputStyle}\n//         />\n//       </div>\n\n//       <div style={boxStyle}>\n//         <label>End Hour</label>\n//         <select\n//           name=\"endHour\"\n//           value={filters.endHour}\n//           onChange={handleChange}\n//           style={inputStyle}\n//         >\n//           <option value=\"\">Select Hour</option>\n//           {Array.from({ length: 24 }, (_, i) => (\n//             <option key={i} value={i}>\n//               {i.toString().padStart(2, \"0\")}\n//             </option>\n//           ))}\n//         </select>\n//       </div>\n\n//       {/* Load Graph button */}\n//       <div style={{ display: \"flex\", flexDirection: \"column\", marginTop: \"20px\" }}>\n//         <button\n//           onClick={(onLoadGraph)}\n//           style={{\n//             padding: \"8px 16px\",\n//             background: \"#007bff\",\n//             color: \"white\",\n//             border: \"none\",\n//             borderRadius: \"6px\",\n//             cursor: \"pointer\",\n//             fontSize: \"14px\",\n//             height: \"fit-content\",\n//             transition: \"all 0.3s ease-in-out\",\n//           }}\n//           onMouseEnter={(e) => {\n//             e.target.style.background = \"#0056b3\";\n//             e.target.style.transform = \"scale(1.08)\";\n//             e.target.style.boxShadow = \"0 4px 12px rgba(0, 123, 255, 0.5)\";\n//             // e.target.innerText = \"ðŸš€ Ready to Load?\";\n//           }}\n//           onMouseLeave={(e) => {\n//             e.target.style.background = \"#007bff\";\n//             e.target.style.transform = \"scale(1)\";\n//             e.target.style.boxShadow = \"none\";\n//             e.target.innerText = \"Load Graph\";\n//           }}\n//         >\n//           Load Graph\n//         </button>\n//       </div>\n//     </div>\n//   );\n// }\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}